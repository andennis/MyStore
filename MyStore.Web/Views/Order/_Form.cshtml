@model OrderViewModel

@Html.HiddenFor(m => m.OrderId)

<div class="row">
    @if (Model.IsNew)
    {
        <div class="form-group">
            @Html.LabelFor(m => m.ClientId, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ClientId, Model.Clients, new {@class = "form-control"})
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(m => m.OrderRefNumber, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.DisplayTextFor(m => m.OrderRefNumber)
                @Html.HiddenFor(m => m.OrderRefNumber)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Status, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(m => m.Status)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ClientName, new {@class = "col-md-2 control-label"})
            <div class="col-md-10">
                @Html.DisplayTextFor(m => m.ClientName)
                @Html.HiddenFor(m => m.ClientId)
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(m => m.Comment, new {@class = "col-md-2 control-label"})
        <div class="col-md-10">
            @Html.TextAreaFor(m => m.Comment, new {@class = "form-control"})
        </div>
    </div>
</div>

@if (!Model.IsNew)
{
    <div class="row">
        @*@if (!UserContext.ClientId.HasValue)*@
        {
            @Html.ActionLink("Add New", "CreateOrderItem", "OrderItem", new {orderId = Model.OrderId}, new {@class = "btn btn-default"})
        }

        @(Html.Grid<OrderItemViewModel>()
              .Name("grdOrderItem")
              .CssClass("myst-grid")
              .DataSource(ds => ds.Read(Url.Action("GridSearch", "OrderItem", new {Model.OrderId})))
              .Columns(c =>
              {
                  c.Bound(p => p.OrderItemId).Title("ID").Width("100px");
                  c.BoundLink(p => p.ProductName, Url.Action("Edit", "Product"), id => id.ProductId).Title("Product Name");
                  c.Bound(p => p.ProductPrice).Title("Price, $");
                  c.Bound(p => p.Amount);
                  c.Bound(p => p.TotalPrice).Title("Total Price, $");
                  var actions = c.Bound(p => p.OrderItemId).Title("Action");
                  //if (!UserContext.ClientId.HasValue)
                  {
                      actions.GridAction("Edit", Url.Action("Edit", "OrderItem"));
                      actions.GridAjaxAction("Delete", Url.Action("Delete", "OrderItem"));
                  }
              }))
    </div>
    <div class="row">
        <p><b>Order Total Price: @Model.TotalPrice.ToString("C")</b></p>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        window.grid.Init($("#grdOrderItem"));
    })
</script>
